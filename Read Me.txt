--------------------------------------------------------------------------------
                        Darcs Importer 1.0 (prerelease)
                           Copyright 2005, Playhaus
                      Born on 2005-09-22 to Jonathon Mah
--------------------------------------------------------------------------------

QUICKSTART AND INSTALLATION
===========================

1. Put Darcs.mdimporter in /Library/Spotlight/ or ~/Library/Spotlight/
   (depending on whether you want the importer to be available for all users or
   just yourself)
2. Run the shell script:
   make_importable.sh /path/to/my/_darcs
   This will make the repository appear as a bundle to the system, so it can be
   associated with the Darcs importer. It will then call mdimport on your
   repository to import all the information into Spotlight. The first time this
   is run it may take a few seconds. Rest assured, though, once broken in the
   importer is quite fast -- it imports the current darcs-stable in about 0.15
   seconds on my 1GHz iBook G4.

Done!


(The unmake_importable.sh script reverts all the changes made by
make_importable.sh, if you ever so desire.)


Unfortunately changes aren't currently picked up automatically. You can get
around this by adding mdimport as a posthook to the record/pull/etc. commands.
For example:
    darcs record --posthook=mdimport\ _darcs --run-posthook
Or, to your darcs defaults file (~/.darcs/defaults  or  _darcs/prefs/defaults):
    record  posthook mdimport _darcs
    pull    posthook mdimport _darcs
	(etc.)
	ALL     run-posthook


WHAT IS IMPORTED
================

* The author (_darcs/prefs/author) is put into the "Author" field
  (kMDItemAuthors)
* The MOTD file (_darcs/prefs/motd) is put into the "Comments" field
  (kMDItemComments)
* The repositories file (_darcs/prefs/repos) is put into the "Where from" array
  (kMDItemWhereFroms)
* The log entires are put into the text content (kMDItemTextContent)
* The patch authors are put into "Contributors" (kMDItemContributors) and
  "E-mail Addresses" (kMDItemEmailDdresses)
* The date of the first patch is set as the content creation date
  (kMDItemContentCreationDate)
* The date of the most recent patch is set as the content modification date
  (kMDItemContentModificationDate), and also as the last used date
  (kMDItemLastUsedDate)
* The display name (kMDItemDisplayName) is set to the name of the parent folder
  and " (darcs)", so that instead of seeing a bunch of "_darcs" directories in
  your search results, you see names such as "My Project (darcs)".


HOW IT WORKS
============

The Darcs Importer uses a combination of two methods (both deprecated) to make
darcs repositories importable. Firstly, a _darcs/Contents/PkgInfo file is added
to the repo. This is an 8-byte file that contains a Mac OS type code and creator
code, in that order. The type code chosen to represent a darcs repository is
'DRep', and this is reflected in the importer's Info.plist file. The PkgInfo
file was deprecated in Mac OS X 10.2.

Secondly, the HFS Bundle Bit is set on the _darcs directory to make it appear as
a package to some tools. The Bundle Bit flag applied on folders was never
sanctioned, but used unoficially on Mac OS 9 (this needs checking). These
unconventional approaches are needed because the standard way of creating
packages requires the use of file extensions, and it would be nice if the darcs
code didn't have to be changed (to reference, say, "_repo.darcs" instead of
"_darcs").

The 'make_importable.sh' script makes these two changes automatically, given the
path to a _darcs directory.

The combination of these two modifications makes Spotlight see the _darcs
directory both as a single entity, and as a standard directory. That is, the
Darcs importer will run on the _darcs directory as if it were a package, picking
out the patch logs and authors. Some individual files will also be imported too,
possibly such as files in the pristine tree, or the "checkpoints" directory. I
haven't determined a pattern for what is imported and what isn't. This is not a
desirable effect.

When a change is made to a repository (e.g. after running 'darcs record'), it is
not automatically picked up by Spotlight. Instead, use the command:
    darcs record --posthook=mdimport\ _darcs --run-posthook
This will tell Spotlight to re-import the repository after a record.
